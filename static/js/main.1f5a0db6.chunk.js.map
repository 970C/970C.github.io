{"version":3,"sources":["getTickerDat.js","chart.js","App.js","reportWebVitals.js","index.js"],"names":["axiosInstance","axios","create","baseURL","reformat","stockData","Object","entries","map","date","priceData","open","Number","high","low","close","Chart","useState","setStockData","useEffect","a","symbol","get","params","function","interval","apikey","result","console","log","data","fetchDat","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAEMA,E,OAAgBC,EAAMC,OAAO,CAC/BC,QAAS,sC,OCeb,SAASC,EAAUC,GACf,OAAOC,OAAOC,QAAQF,GAAWG,KAAI,SAAAD,GAAY,IAAD,cAClBA,EADkB,GACrCE,EADqC,KAC/BC,EAD+B,KAG5C,MAAO,CACHD,OACAE,KAAMC,OAAOF,EAAU,YACvBG,KAAMD,OAAOF,EAAU,YACvBI,IAAKF,OAAOF,EAAU,WACtBK,MAAOH,OAAOF,EAAU,iBAKrBM,MA7BD,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACTZ,EADS,KACEa,EADF,KAYd,OATFC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,sEDDKC,ECEe,MDDlCrB,EAAcsB,IACjB,GACA,CACIC,OAAQ,CACJC,SAAU,oBACVH,SACAI,SAAU,OACVC,OAAQ,sBCPC,OACTC,EADS,OAEfC,QAAQC,IAAIF,EAAOG,MACnBZ,EAAad,EAASuB,EAAOG,KAAK,yBAHnB,iCDDI,IAACT,ICCL,OAAH,qDAKdU,KACA,IACFH,QAAQC,IAAIxB,EAAU,GAAGI,MAClB,yBCAEuB,EAZH,WAGV,OACE,sBAAKC,UAAU,MAAf,UACE,mDACA,sCACA,cAAC,EAAD,QCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1f5a0db6.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://www.alphavantage.co/query'\r\n});\r\n\r\nexport const getTickerData = (symbol) => {\r\n    return axiosInstance.get(\r\n        '',\r\n        {\r\n            params: {\r\n                function: 'TIME_SERIES_DAILY',\r\n                symbol,\r\n                interval: '5min',\r\n                apikey: '0WG7874IOAWOY2FX',\r\n            }\r\n        }\r\n    );\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { getTickerData } from './getTickerDat.js';\r\n\r\nconst Chart = () => {\r\n    const [stockData, setStockData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchDat = async () => {\r\n          const result = await getTickerData('MOO');\r\n          console.log(result.data);\r\n          setStockData(reformat(result.data['Time Series (Daily)']));\r\n        };\r\n        fetchDat();\r\n      },[]);\r\n      console.log(stockData[0].date);\r\n      return <div></div>\r\n};\r\n\r\nfunction reformat (stockData) {\r\n    return Object.entries(stockData).map(entries => {\r\n        const [date, priceData] = entries;\r\n\r\n        return {\r\n            date,\r\n            open: Number(priceData['1. open']),\r\n            high: Number(priceData['2. high']),\r\n            low: Number(priceData['3. low']),\r\n            close: Number(priceData['4. close']),\r\n        }\r\n    })\r\n};\r\n\r\nexport default Chart;","import './App.css';\nimport Chart from './chart.js';\n\nconst App = () => {\n  \n\n  return (\n    <div className=\"App\">\n      <h1>Stock Ticker 9000</h1>\n      <h2>KOPN</h2> \n      <Chart />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}